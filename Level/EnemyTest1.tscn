[gd_scene load_steps=9 format=2]

[ext_resource path="res://Player/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://Player/HeartUI.tscn" type="PackedScene" id=6]
[ext_resource path="res://icon.png" type="Texture" id=16]

[sub_resource type="Shader" id=50]
code = "shader_type canvas_item;
uniform vec2 player_position;
uniform vec4 color : hint_color = vec4(0.305, 0.298, 0.341,1);

uniform float MULTIPLIER = 0.56;
uniform float SCALE = 0.5;
uniform float SOFTNESS = 0.45;

void fragment(){
	float val = distance(vec2(UV.x , UV.y * MULTIPLIER), vec2(player_position.x , player_position.y * MULTIPLIER));
	val = val / SCALE;
	float vignette = smoothstep(0.2, SOFTNESS, val);
	COLOR = vec4(color.rgb , vignette );
}"

[sub_resource type="ShaderMaterial" id=45]
shader = SubResource( 50 )
shader_param/player_position = Vector2( 0.5, 0.5 )
shader_param/color = Color( 0, 0, 0, 1 )
shader_param/MULTIPLIER = 1.0
shader_param/SCALE = 0.5
shader_param/SOFTNESS = 0.75

[sub_resource type="Shader" id=51]
code = "shader_type canvas_item;
uniform vec2 player_position;
uniform vec4 color : hint_color = vec4(0.305, 0.298, 0.341,1);

uniform float MULTIPLIER = 0.56;
uniform float SCALE = 0.5;
uniform float SOFTNESS = 0.45;

void fragment(){
	float val = distance(vec2(UV.x , UV.y * MULTIPLIER), vec2(player_position.x , player_position.y * MULTIPLIER));
	val = val / SCALE;
	float vignette = smoothstep(0.2, SOFTNESS, val);
	COLOR = vec4(color.rgb , vignette );
}"

[sub_resource type="ShaderMaterial" id=43]
shader = SubResource( 51 )
shader_param/player_position = Vector2( 0.5, 0.5 )
shader_param/color = Color( 0, 0, 0, 1 )
shader_param/MULTIPLIER = 0.5
shader_param/SCALE = 1.25
shader_param/SOFTNESS = 0.5

[sub_resource type="GDScript" id=6]
script/source = "extends Control

export var entity_path : NodePath
export var heart_scene : PackedScene
onready var entity : LivingEntity = get_node(entity_path)

var maximum_health = 0
var heart_width = 9

var hearts = []

func _ready():
	entity.connect(\"entity_hurt\", self, \"_on_entity_hurt\")
	
	maximum_health = entity.maximum_health
	for i in range(maximum_health):
		var new_heart = heart_scene.instance()
		hearts.append(new_heart)
		new_heart.texture = new_heart.texture.duplicate()
		# Timer offset (for smooth bling)
		new_heart.timer = float(maximum_health - i * 0.7) / maximum_health * new_heart.animation_duration * 0.6
		add_child(new_heart)

func _on_entity_hurt():
	hearts[entity.health].on_hit()
"

[node name="EnemyTest" type="Node2D"]

[node name="Player" parent="." instance=ExtResource( 3 )]
position = Vector2( 100, 372 )
SPEED = 18000

[node name="Camera2D" type="Camera2D" parent="Player"]
current = true
zoom = Vector2( 1.5, 1.5 )
limit_left = 0
limit_top = 0
limit_right = 1856
limit_bottom = 1280
limit_smoothed = true
editor_draw_limits = true

[node name="Tween" type="Tween" parent="Player/Camera2D"]

[node name="ColorRect" type="Sprite" parent="Player"]
visible = false
material = SubResource( 45 )
scale = Vector2( 40, 40 )
texture = ExtResource( 16 )

[node name="EffectsLayer" type="CanvasLayer" parent="."]

[node name="Vignette" type="ColorRect" parent="EffectsLayer"]
material = SubResource( 43 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="HealthBar" type="HBoxContainer" parent="CanvasLayer"]
margin_left = 64.0
margin_top = 64.0
margin_right = 73.0
margin_bottom = 72.0
rect_min_size = Vector2( 0, 8 )
rect_scale = Vector2( 4, 4 )
custom_constants/separation = 1
script = SubResource( 6 )
entity_path = NodePath("../../Player/LivingEntity")
heart_scene = ExtResource( 6 )

[connection signal="entity_death" from="Player/LivingEntity" to="CanvasLayer" method="hide"]
[connection signal="entity_free" from="Player/LivingEntity" to="Player/Camera2D" method="_on_entity_free"]
[connection signal="entity_hurt" from="Player/LivingEntity" to="Player/Camera2D" method="shake" binds= [ 30.0 ]]

[editable path="Player"]
